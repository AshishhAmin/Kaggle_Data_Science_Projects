{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12961420,"sourceType":"datasetVersion","datasetId":8203078}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/ashishamin/gdp-analysis?scriptVersionId=261977399\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:17:48.310154Z","iopub.execute_input":"2025-09-15T15:17:48.31047Z","iopub.status.idle":"2025-09-15T15:17:48.686897Z","shell.execute_reply.started":"2025-09-15T15:17:48.310439Z","shell.execute_reply":"2025-09-15T15:17:48.685707Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:20:04.188894Z","iopub.execute_input":"2025-09-15T15:20:04.189176Z","iopub.status.idle":"2025-09-15T15:20:04.194733Z","shell.execute_reply.started":"2025-09-15T15:20:04.189156Z","shell.execute_reply":"2025-09-15T15:20:04.193661Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df=pd.read_csv(\"/kaggle/input/gdp-per-country-20202025/2020-2025.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:19.633588Z","iopub.execute_input":"2025-09-15T15:19:19.633942Z","iopub.status.idle":"2025-09-15T15:19:19.644087Z","shell.execute_reply.started":"2025-09-15T15:19:19.633919Z","shell.execute_reply":"2025-09-15T15:19:19.642945Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:21.33831Z","iopub.execute_input":"2025-09-15T15:19:21.338589Z","iopub.status.idle":"2025-09-15T15:19:21.353479Z","shell.execute_reply.started":"2025-09-15T15:19:21.33857Z","shell.execute_reply":"2025-09-15T15:19:21.352116Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:24.153107Z","iopub.execute_input":"2025-09-15T15:19:24.153444Z","iopub.status.idle":"2025-09-15T15:19:24.160688Z","shell.execute_reply.started":"2025-09-15T15:19:24.15342Z","shell.execute_reply":"2025-09-15T15:19:24.159616Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:24.895107Z","iopub.execute_input":"2025-09-15T15:19:24.895422Z","iopub.status.idle":"2025-09-15T15:19:24.935187Z","shell.execute_reply.started":"2025-09-15T15:19:24.895397Z","shell.execute_reply":"2025-09-15T15:19:24.933351Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:25.552519Z","iopub.execute_input":"2025-09-15T15:19:25.552914Z","iopub.status.idle":"2025-09-15T15:19:25.560916Z","shell.execute_reply.started":"2025-09-15T15:19:25.552888Z","shell.execute_reply":"2025-09-15T15:19:25.559895Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"null_df=df[df.isnull().any(axis=1)]\nprint(null_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:26.373409Z","iopub.execute_input":"2025-09-15T15:19:26.373735Z","iopub.status.idle":"2025-09-15T15:19:26.384722Z","shell.execute_reply.started":"2025-09-15T15:19:26.373713Z","shell.execute_reply":"2025-09-15T15:19:26.383815Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"* According to this, Eritrea and Syria needs to be dropped as we cannot move forward with these countries due to unavailability of the data.\n* Other Countries null rows can be filled using Median value of the respective countries.","metadata":{}},{"cell_type":"code","source":"df=df.drop([169,54])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:32.255888Z","iopub.execute_input":"2025-09-15T15:19:32.256171Z","iopub.status.idle":"2025-09-15T15:19:32.266577Z","shell.execute_reply.started":"2025-09-15T15:19:32.256151Z","shell.execute_reply":"2025-09-15T15:19:32.265109Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":" We dropped Syria and Eritrea using Index values. ","metadata":{}},{"cell_type":"code","source":"num_cols=df.select_dtypes(include=[\"number\"]).columns\ndf[num_cols]=df[num_cols].T.apply(lambda row:row.fillna(row.median())).T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:34.842907Z","iopub.execute_input":"2025-09-15T15:19:34.843281Z","iopub.status.idle":"2025-09-15T15:19:34.898143Z","shell.execute_reply.started":"2025-09-15T15:19:34.843256Z","shell.execute_reply":"2025-09-15T15:19:34.897163Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"Fill the rest of the countries' null values with the Median.","metadata":{}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:19:35.952646Z","iopub.execute_input":"2025-09-15T15:19:35.953003Z","iopub.status.idle":"2025-09-15T15:19:35.964095Z","shell.execute_reply.started":"2025-09-15T15:19:35.952979Z","shell.execute_reply":"2025-09-15T15:19:35.962566Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top20_2020 = df[['Country', '2020']].sort_values(by='2020', ascending=False).head(20)\nplt.figure(figsize=(12,6))\nplt.bar(top20_2020['Country'], top20_2020['2020'])\nplt.xticks(rotation=75)\nplt.title(\"Top 20 Countries by GDP in 2020\")\nplt.ylabel(\"GDP (current USD)\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:20:10.493661Z","iopub.execute_input":"2025-09-15T15:20:10.495413Z","iopub.status.idle":"2025-09-15T15:20:11.044072Z","shell.execute_reply.started":"2025-09-15T15:20:10.495349Z","shell.execute_reply":"2025-09-15T15:20:11.042965Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"top20_2025 = df[['Country', '2025']].sort_values(by='2025', ascending=False).head(20)\nplt.figure(figsize=(12,6))\nplt.bar(top20_2025['Country'], top20_2025['2025'])\nplt.xticks(rotation=75)\nplt.title(\"Top 20 Countries by GDP in 2025\")\nplt.ylabel(\"GDP (current USD)\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:22:19.333714Z","iopub.execute_input":"2025-09-15T15:22:19.334172Z","iopub.status.idle":"2025-09-15T15:22:19.685504Z","shell.execute_reply.started":"2025-09-15T15:22:19.334143Z","shell.execute_reply":"2025-09-15T15:22:19.684275Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df['Change_2020_2025_%'] = ((df['2025'] - df['2020']) / df['2020']) * 100\ndf[['Country', '2020', '2025', 'Change_2020_2025_%']].sort_values(by='Change_2020_2025_%', ascending=False).head(10)\n\ntop10_growth = df.sort_values(by='Change_2020_2025_%', ascending=False).head(10)\nplt.figure(figsize=(12,6))\nplt.bar(top10_growth['Country'], top10_growth['Change_2020_2025_%'])\nplt.xticks(rotation=75)\nplt.title(\"Top 10 Countries by GDP Growth (2020–2025)\")\nplt.ylabel(\"Growth (%)\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:22:57.233987Z","iopub.execute_input":"2025-09-15T15:22:57.2343Z","iopub.status.idle":"2025-09-15T15:22:57.468268Z","shell.execute_reply.started":"2025-09-15T15:22:57.234278Z","shell.execute_reply":"2025-09-15T15:22:57.467366Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"2026 GDP Prediction using Linear Regression\nWe apply a linear regression model for each country (2020–2025) to estimate GDP values for 2026.","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nimport numpy as np\nyears = np.array([2020, 2021, 2022, 2023, 2024, 2025]).reshape(-1, 1)\ndf['2026_pred'] = np.nan\nfor i, row in df.iterrows():\n    values = row[['2020', '2021', '2022', '2023', '2024', '2025']].values.astype(float)\n    \n    model = LinearRegression()\n    model.fit(years, values)\n\n    pred_2026 = model.predict(np.array([[2026]]))[0]\n    df.at[i, '2026_pred'] = pred_2026\ndf[['Country', '2025', '2026_pred']].head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:28:44.839121Z","iopub.execute_input":"2025-09-15T15:28:44.839433Z","iopub.status.idle":"2025-09-15T15:28:46.195261Z","shell.execute_reply.started":"2025-09-15T15:28:44.839411Z","shell.execute_reply":"2025-09-15T15:28:46.194418Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"india = df[df['Country'] == 'India'].iloc[0]\n\nyears = [2020, 2021, 2022, 2023, 2024, 2025]\nvalues = [india[str(y)] for y in years]\n\ngdp_2026 = india['2026_pred']\n\nyears_extended = years + [2026]\nvalues_extended = values + [gdp_2026]\n\n\nplt.figure(figsize=(8,5))\nplt.plot(years_extended, values_extended, marker='o', label=\"GDP\")\nplt.axvline(2025.5, color='red', linestyle='--', label=\"2026 Prediction\")\nplt.title(\"India GDP Trend (2020–2026, with Prediction)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"GDP (current USD)\")\nplt.grid(True)\nplt.legend()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:28:54.603649Z","iopub.execute_input":"2025-09-15T15:28:54.604722Z","iopub.status.idle":"2025-09-15T15:28:54.859875Z","shell.execute_reply.started":"2025-09-15T15:28:54.604689Z","shell.execute_reply":"2025-09-15T15:28:54.858455Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"world_gdp = df[['2020','2021','2022','2023','2024','2025','2026_pred']].sum()\n\nyears = world_gdp.index.tolist()\nvalues = world_gdp.values\n\nplt.figure(figsize=(8,5))\nplt.plot(years, values, marker='o')\nplt.title(\"World GDP Trend (2020–2026, including prediction)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"Total GDP (current USD)\")\nplt.grid(True)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-15T15:30:16.537938Z","iopub.execute_input":"2025-09-15T15:30:16.538272Z","iopub.status.idle":"2025-09-15T15:30:16.775743Z","shell.execute_reply.started":"2025-09-15T15:30:16.538249Z","shell.execute_reply":"2025-09-15T15:30:16.77459Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}